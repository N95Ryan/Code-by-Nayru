---
interface Props {
  title?: string;
}

const { title = "Code by Nayru" } = Astro.props;
---

<header class="w-full bg-transparent z-20">
  <nav class="container mx-auto px-4 py-4">
    <!-- Navigation -->
    <ul class="hidden md:flex justify-center items-center space-x-8">
      <li>
        <a
          href="#about"
          class="text-white hover:text-purple-600 transition-colors">À propos</a
        >
      </li>
      <li>
        <a
          href="#services"
          class="text-white hover:text-purple-600 transition-colors">Services</a
        >
      </li>
      <li>
        <a
          href="#tarifs"
          class="text-white hover:text-purple-600 transition-colors">Tarifs</a
        >
      </li>
      <li>
        <a
          href="#contact"
          class="text-white hover:text-purple-600 transition-colors">Contact</a
        >
      </li>
    </ul>
  </nav>
</header>

<script>
  const menuButton = document.getElementById("menuButton");
  const mobileMenu = document.getElementById("mobileMenu");
  let lastScrollY = window.scrollY;

  // Gestion du menu mobile
  menuButton?.addEventListener("click", () => {
    mobileMenu?.classList.toggle("-translate-x-full");
  });

  // Fermer le menu mobile lors du clic sur un lien
  const mobileLinks = mobileMenu?.querySelectorAll("a");
  mobileLinks?.forEach((link) => {
    link.addEventListener("click", () => {
      mobileMenu?.classList.add("-translate-x-full");
    });
  });

  // Gestion de l'opacité du bouton lors du défilement
  window.addEventListener("scroll", () => {
    const currentScrollY = window.scrollY;

    if (currentScrollY > lastScrollY) {
      // Défilement vers le bas
      menuButton?.classList.add("opacity-10");
    } else {
      // Défilement vers le haut
      menuButton?.classList.remove("opacity-10");
    }

    lastScrollY = currentScrollY;
  });
</script>
