---
import { getTranslator } from "../i18n";

interface Props {
  lang: "fr" | "en";
}

interface Service {
  key: string;
  icon: string;
}

const { lang } = Astro.props;
const t = getTranslator(lang);

const services: Service[] = [
  {
    key: "web",
    icon: "FiCode",
  },
  {
    key: "mobile",
    icon: "FiSmartphone",
  },
  {
    key: "performance",
    icon: "FiZap",
  },
  {
    key: "consulting",
    icon: "FiHelpCircle",
  },
];

// Fonction pour obtenir les descriptions
function getDescriptions(key: string): string[] {
  const translations = {
    fr: {
      web: [
        "Conception de sites web responsives et performants",
        "Développement d'applications web (+PWA)",
        "Intégration API et gestion des bases de données",
      ],
      mobile: [
        "Développement d'applications mobiles hybrides",
        "Création d'applications iOS et Android avec React Native",
        "Optimisation des performances et de l'expérience utilisateur",
      ],
      performance: [
        "Audits techniques et amélioration des performances",
        "Optimisation SEO et des temps de chargement",
      ],
      consulting: [
        "Conseil pour les entreprises souhaitant migrer vers des solutions modernes",
        "Formations personnalisées sur les technologies utilisées",
        "Analyse des besoins techniques",
      ],
    },
    en: {
      web: [
        "Responsive and performant website design",
        "Web application development (+PWA)",
        "API integration and database management",
      ],
      mobile: [
        "Hybrid mobile application development",
        "iOS and Android app creation with React Native",
        "Performance and user experience optimization",
      ],
      performance: [
        "Technical audits and performance improvement",
        "SEO and loading time optimization",
      ],
      consulting: [
        "Advice for companies looking to migrate to modern solutions",
        "Custom training on used technologies",
        "Technical needs analysis",
      ],
    },
  };

  return translations[lang as "fr" | "en"][key as keyof typeof translations.fr];
}
---

<section id="services" class="py-20 text-white">
  <div class="container mx-auto px-4">
    <h2 class="text-3xl md:text-4xl font-bold text-center mb-12">
      {t("services.title")}
    </h2>
    <p class="text-xl text-center mb-12 max-w-3xl mx-auto">
      {t("services.description")}
    </p>

    <div class="grid grid-cols-2 md:grid-cols-4 gap-4 sm:gap-6">
      {
        services.map((service, index) => {
          const description = getDescriptions(service.key);
          return (
            <div
              class="bg-white/5 backdrop-blur-sm border border-white/30 rounded-2xl p-4 sm:p-6 hover:scale-105 transition-all duration-300 animate-fade-in"
              style={`animation-delay: ${index * 0.1}s`}
            >
              <div class="text-3xl sm:text-4xl mb-3 sm:mb-4 flex justify-center">
                <svg
                  class="w-8 h-8 sm:w-12 sm:h-12 text-white"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  {service.icon === "FiCode" && (
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"
                    />
                  )}
                  {service.icon === "FiSmartphone" && (
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"
                    />
                  )}
                  {service.icon === "FiZap" && (
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M13 10V3L4 14h7v7l9-11h-7z"
                    />
                  )}
                  {service.icon === "FiHelpCircle" && (
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    />
                  )}
                </svg>
              </div>
              <h3 class="text-lg sm:text-xl font-bold mb-3 sm:mb-4 text-center">
                {t(`services.${service.key}.title`)}
              </h3>
              <ul class="space-y-1 sm:space-y-2">
                {description.map((item) => (
                  <li class="text-xs sm:text-sm text-gray-300 flex items-start">
                    <svg
                      class="w-3 h-3 sm:w-4 sm:h-4 text-purple-600 mr-2 mt-1"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M5 13l4 4L19 7"
                      />
                    </svg>
                    {item}
                  </li>
                ))}
              </ul>
            </div>
          );
        })
      }
    </div>
  </div>
</section>
